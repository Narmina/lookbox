%label= t("search_filters.sort_by")
- is_remote = defined?(@available_pictures) ? true : false
= sort_link @search, :title, t("search_filters.title"), {}, { remote: is_remote, class: '' }
= sort_link @search, :updated_at, t("search_filters.date"), {}, { remote: is_remote, class: '' }
.form-group
  .title-input-wrapper
    = f.text_field :title_cont, class: "search-query form-control", "placeholder" => t("search_filters.type_title_or_part")
    %span.clear-input-btn
      &times;
.form-group.search-filters-category
  %label.search-label= t("search_filters.category")
  = f.select :category_search, nested_set_options(current_user.categories) {|cat| "#{'-' * cat.depth} #{cat.name}" }.insert(0,  ['Uncategorized', '-1']), { include_blank: t("search_filters.include_blank_all") },  { multiple: true, class: "select2-select hidden" }
  -#= f.select :category_search, categories_with_depth_name(current_user.categories).insert(0,  ['Uncategorized', '-1']), { include_blank: t("search_filters.include_blank_all")}, onChange: "$(this.form).submit()", class: 'form-control'
  = f.check_box :include_subcategories, onChange: "$(this.form).submit()"
  = t("search_filters.include_subcategories")
= f.submit 'Search', :class => "btn btn-grey"
- if @pictures.any?
  %label.search-label= "Found: #{@pictures.total_count}"
= link_to refresh_pictures_path(look_id: look_id_for_pictures_search), {remote: is_remote, class: "btn" } do
  = t("search_filters.refresh")
  %i.glyphicon.glyphicon-refresh
= react_component 'CategoriesSelect', { selected_categories: selected_categories_for_multiselect().to_json }



